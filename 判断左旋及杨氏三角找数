# my-code
//用子串判断是否左旋
int is_left_move(char* str1, char* str2)
{
	int len1 = strlen(str1);
	int len2 = strlen(str2);
	if (len1 != len2)
		return 0;
	strncat(str1, str1,6);
	char* ret =strstr(str1, str2);
	if (ret == NULL)
		return 0;
	else
		return 1;
}
int main()
{
	
	char arr1[30] = "abcdef";
	char arr2[] = "cdef";
	int ret = is_left_move(arr1, arr2);
	if (ret == 1)
	{
		printf("Yes\n");
	}
	else
		printf("No\n");
	return 0;

}

//杨氏三角中找数
int if_yang(int arr[3][3], int n,int* px,int* py)
{
	int x = 0;
	int y = 2;
	while (x<=2 && y>=0)
	{
		if (arr[x][y] > n)
			y--;
		else if (arr[x][y] < n)
			x++;
		else
		{
			*px = x;
			*py = y;
			return 1;
		}
	}
	return 0;
}
int main()
{
	int arr[3][3] = { 1,4,7,2,5,8,3,6,9 };
	int n = 9;
	int x = 0;
	int y = 0;
	//返回型参数：既能返回一个值，又能把下标带回来
	int ret = if_yang(arr,n,&x,&y);
	if (ret == 1)
		printf("Yes,下标：%d %d\n",x,y);
	if (ret == 0)
		printf("No\n");
	return 0;
}
