game.h:
#define _CRT_SECURE_NO_WARNINGS 1
#define ROW 3
#define COL 3
#include<stdio.h>
#include<time.h>
void DisplayBoard(char board[ROW][COL]);
void InitBoard(char board[ROW][COL]);
void PlayerMove(char board[ROW][COL]);
void ComputerMove(char board[ROW][COL]);
char IsWin(char board[ROW][COL]);

game.c:
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"
void InitBoard(char board[ROW][COL])
{
	int i, j;
	for (i = 0; i < ROW; i++)
	{
		for (j = 0; j < ROW; j++)
		{
			board[i][j] = ' ';
	   }
	}
}
void DisplayBoard(char board[ROW][COL])
{
	int i, j;
	for (i = 0; i < ROW; i++)
	{
		for (j = 0; j < ROW; j++)
		{
			printf(" %c ",board[i][j]);
			if (j < ROW - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		if (i < ROW - 1)
		{
			for (j = 0; j < ROW; j++)
			{
				printf("---");
				if (j < ROW - 1)
					printf("|");
			}
			printf("\n");
		}
	}
}
void PlayerMove(char board[ROW][COL])
{
	int x = 0;
	int y = 0;
	printf("玩家走:>\n");
	
	while (1) 
	{
		printf("请输入坐标：");
		scanf("%d%d", &x, &y);
		if (x >= 1 && x <= ROW && y >= 1 && y <= 3)
		{
			if (board[x - 1][y - 1] == ' ')
			{
				board[x - 1][y - 1] = '*';
				break;
			}
			else
				printf("该坐标被占用\n");
		}
		else
		{
			printf("非法坐标，重新输入\n");
		}
	}
}
void ComputerMove(char board[ROW][COL])
{
	printf("电脑走:>\n");
	int x = 0;
	int y = 0;
	
	while (1) 
	{
		x = rand() % ROW;
		y = rand() % COL;
		if (board[x][y] == ' ')
		{
			board[x][y] = '#';
			break;
		}
	}
}
int IsFull(char board[ROW][COL])
{
	int i = 0;
	int j = 0;
	for (i = 0; i < ROW; i++)
	{
		for(j=0;j<COL;j++)
			if (board[i][j] == ' ')
			{
				return 0;
			}
	}
	return 1;
}
char IsWin(char board[ROW][COL])
{
	int i = 0;
	for (i = 0; i < ROW; i++)
	{
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ')
		{
			return board[i][0];
		}
	}
	for (i = 0; i < COL; i++)
	{
		if(board[0][i]==board[1][i]&&board[1][i]==board[2][i]&&board[1][i]!=' ')
			return board[0][i];
	}
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ')
		return board[0][0];
	if (board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[0][2] != ' ')
		return board[1][1];
	if (1 == IsFull(board))
	{
		return 'Q';
	}
	return 'C';
}

test.c:
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"


void menu()
{
	printf("********************************************\n");
	printf("************   1.play   0.exit  ************\n");
	printf("********************************************\n");
	
	
}
void game()
{
	char ret = 0;
	char board[ROW][COL] = {0};
	InitBoard(board);
	DisplayBoard(board);
	while (1) 
	{
		PlayerMove(board);
		DisplayBoard(board);
		ret = IsWin(board);
		if (ret != 'C')
		{
			break;
		}
		ComputerMove(board);
		DisplayBoard(board);
		ret = IsWin(board);
		if (ret != 'C')
		{
			break;
		}
	}
	if (ret == '*')
		printf("玩家赢\n");
	else if (ret == '#')
		printf("电脑赢\n");
	else
		printf("平局\n");
}
void test()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请输入：");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			printf("三字棋\n");
			game();
			break;
		case 0:
			printf("退出有戏\n");
			break;
		default:
			printf("请重新输入\n");
			break;
		}
	} while (input);
}
int main()
{
	test();
	return 0;
}
